Index: .flutter-plugins-dependencies
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\"info\":\"This is a generated file; do not edit or check into version control.\",\"plugins\":{\"ios\":[{\"name\":\"cloud_firestore\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/cloud_firestore-4.3.1/\",\"native_build\":true,\"dependencies\":[\"firebase_core\"]},{\"name\":\"file_picker\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/file_picker-5.2.5/\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"firebase_auth\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_auth-4.2.5/\",\"native_build\":true,\"dependencies\":[\"firebase_core\"]},{\"name\":\"firebase_core\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_core-2.4.1/\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"firebase_messaging\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_messaging-14.2.1/\",\"native_build\":true,\"dependencies\":[\"firebase_core\"]},{\"name\":\"firebase_storage\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_storage-11.0.10/\",\"native_build\":true,\"dependencies\":[\"firebase_core\"]},{\"name\":\"flutter_local_notifications\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/flutter_local_notifications-13.0.0/\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"fluttertoast\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/fluttertoast-8.1.2/\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"image_picker_ios\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/image_picker_ios-0.8.6+6/\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"printing\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/printing-5.9.3/\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"url_launcher_ios\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/url_launcher_ios-6.0.18/\",\"native_build\":true,\"dependencies\":[]}],\"android\":[{\"name\":\"cloud_firestore\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/cloud_firestore-4.3.1/\",\"native_build\":true,\"dependencies\":[\"firebase_core\"]},{\"name\":\"file_picker\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/file_picker-5.2.5/\",\"native_build\":true,\"dependencies\":[\"flutter_plugin_android_lifecycle\"]},{\"name\":\"firebase_auth\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_auth-4.2.5/\",\"native_build\":true,\"dependencies\":[\"firebase_core\"]},{\"name\":\"firebase_core\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_core-2.4.1/\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"firebase_messaging\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_messaging-14.2.1/\",\"native_build\":true,\"dependencies\":[\"firebase_core\"]},{\"name\":\"firebase_storage\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_storage-11.0.10/\",\"native_build\":true,\"dependencies\":[\"firebase_core\"]},{\"name\":\"flutter_local_notifications\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/flutter_local_notifications-13.0.0/\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"flutter_plugin_android_lifecycle\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/flutter_plugin_android_lifecycle-2.0.7/\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"fluttertoast\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/fluttertoast-8.1.2/\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"image_picker_android\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/image_picker_android-0.8.5+5/\",\"native_build\":true,\"dependencies\":[\"flutter_plugin_android_lifecycle\"]},{\"name\":\"printing\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/printing-5.9.3/\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"url_launcher_android\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/url_launcher_android-6.0.23/\",\"native_build\":true,\"dependencies\":[]}],\"macos\":[{\"name\":\"cloud_firestore\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/cloud_firestore-4.3.1/\",\"native_build\":true,\"dependencies\":[\"firebase_core\"]},{\"name\":\"firebase_auth\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_auth-4.2.5/\",\"native_build\":true,\"dependencies\":[\"firebase_core\"]},{\"name\":\"firebase_core\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_core-2.4.1/\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"firebase_messaging\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_messaging-14.2.1/\",\"native_build\":true,\"dependencies\":[\"firebase_core\"]},{\"name\":\"firebase_storage\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_storage-11.0.10/\",\"native_build\":true,\"dependencies\":[\"firebase_core\"]},{\"name\":\"flutter_local_notifications\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/flutter_local_notifications-13.0.0/\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"printing\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/printing-5.9.3/\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"url_launcher_macos\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/url_launcher_macos-3.0.2/\",\"native_build\":true,\"dependencies\":[]}],\"linux\":[{\"name\":\"printing\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/printing-5.9.3/\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"url_launcher_linux\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/url_launcher_linux-3.0.2/\",\"native_build\":true,\"dependencies\":[]}],\"windows\":[{\"name\":\"printing\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/printing-5.9.3/\",\"native_build\":true,\"dependencies\":[]},{\"name\":\"url_launcher_windows\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/url_launcher_windows-3.0.2/\",\"native_build\":true,\"dependencies\":[]}],\"web\":[{\"name\":\"cloud_firestore_web\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/cloud_firestore_web-3.2.1/\",\"dependencies\":[\"firebase_core_web\"]},{\"name\":\"file_picker\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/file_picker-5.2.5/\",\"dependencies\":[]},{\"name\":\"firebase_auth_web\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_auth_web-5.2.4/\",\"dependencies\":[\"firebase_core_web\"]},{\"name\":\"firebase_core_web\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_core_web-2.1.0/\",\"dependencies\":[]},{\"name\":\"firebase_messaging_web\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_messaging_web-3.2.11/\",\"dependencies\":[\"firebase_core_web\"]},{\"name\":\"firebase_storage_web\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_storage_web-3.3.19/\",\"dependencies\":[\"firebase_core_web\"]},{\"name\":\"fluttertoast\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/fluttertoast-8.1.2/\",\"dependencies\":[]},{\"name\":\"image_picker_for_web\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/image_picker_for_web-2.1.10/\",\"dependencies\":[]},{\"name\":\"printing\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/printing-5.9.3/\",\"dependencies\":[]},{\"name\":\"url_launcher_web\",\"path\":\"/home/falconcodes/.pub-cache/hosted/pub.dev/url_launcher_web-2.0.14/\",\"dependencies\":[]}]},\"dependencyGraph\":[{\"name\":\"cloud_firestore\",\"dependencies\":[\"cloud_firestore_web\",\"firebase_core\"]},{\"name\":\"cloud_firestore_web\",\"dependencies\":[\"firebase_core\",\"firebase_core_web\"]},{\"name\":\"file_picker\",\"dependencies\":[\"flutter_plugin_android_lifecycle\"]},{\"name\":\"firebase_auth\",\"dependencies\":[\"firebase_auth_web\",\"firebase_core\"]},{\"name\":\"firebase_auth_web\",\"dependencies\":[\"firebase_core\",\"firebase_core_web\"]},{\"name\":\"firebase_core\",\"dependencies\":[\"firebase_core_web\"]},{\"name\":\"firebase_core_web\",\"dependencies\":[]},{\"name\":\"firebase_messaging\",\"dependencies\":[\"firebase_core\",\"firebase_messaging_web\"]},{\"name\":\"firebase_messaging_web\",\"dependencies\":[\"firebase_core\",\"firebase_core_web\"]},{\"name\":\"firebase_storage\",\"dependencies\":[\"firebase_core\",\"firebase_storage_web\"]},{\"name\":\"firebase_storage_web\",\"dependencies\":[\"firebase_core\",\"firebase_core_web\"]},{\"name\":\"flutter_local_notifications\",\"dependencies\":[]},{\"name\":\"flutter_plugin_android_lifecycle\",\"dependencies\":[]},{\"name\":\"fluttertoast\",\"dependencies\":[]},{\"name\":\"image_picker\",\"dependencies\":[\"image_picker_android\",\"image_picker_for_web\",\"image_picker_ios\"]},{\"name\":\"image_picker_android\",\"dependencies\":[\"flutter_plugin_android_lifecycle\"]},{\"name\":\"image_picker_for_web\",\"dependencies\":[]},{\"name\":\"image_picker_ios\",\"dependencies\":[]},{\"name\":\"printing\",\"dependencies\":[]},{\"name\":\"url_launcher\",\"dependencies\":[\"url_launcher_android\",\"url_launcher_ios\",\"url_launcher_linux\",\"url_launcher_macos\",\"url_launcher_web\",\"url_launcher_windows\"]},{\"name\":\"url_launcher_android\",\"dependencies\":[]},{\"name\":\"url_launcher_ios\",\"dependencies\":[]},{\"name\":\"url_launcher_linux\",\"dependencies\":[]},{\"name\":\"url_launcher_macos\",\"dependencies\":[]},{\"name\":\"url_launcher_web\",\"dependencies\":[]},{\"name\":\"url_launcher_windows\",\"dependencies\":[]}],\"date_created\":\"2023-01-24 06:10:47.882479\",\"version\":\"3.6.0-1.0.pre.48\"}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.flutter-plugins-dependencies b/.flutter-plugins-dependencies
--- a/.flutter-plugins-dependencies	(revision 042afc9c5a7076f10bed7195b658a9587363f4cb)
+++ b/.flutter-plugins-dependencies	(date 1674586031570)
@@ -1,1 +1,1 @@
-{"info":"This is a generated file; do not edit or check into version control.","plugins":{"ios":[{"name":"cloud_firestore","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/cloud_firestore-4.3.1/","native_build":true,"dependencies":["firebase_core"]},{"name":"file_picker","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/file_picker-5.2.5/","native_build":true,"dependencies":[]},{"name":"firebase_auth","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_auth-4.2.5/","native_build":true,"dependencies":["firebase_core"]},{"name":"firebase_core","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_core-2.4.1/","native_build":true,"dependencies":[]},{"name":"firebase_messaging","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_messaging-14.2.1/","native_build":true,"dependencies":["firebase_core"]},{"name":"firebase_storage","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_storage-11.0.10/","native_build":true,"dependencies":["firebase_core"]},{"name":"flutter_local_notifications","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/flutter_local_notifications-13.0.0/","native_build":true,"dependencies":[]},{"name":"fluttertoast","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/fluttertoast-8.1.2/","native_build":true,"dependencies":[]},{"name":"image_picker_ios","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/image_picker_ios-0.8.6+6/","native_build":true,"dependencies":[]},{"name":"printing","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/printing-5.9.3/","native_build":true,"dependencies":[]},{"name":"url_launcher_ios","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/url_launcher_ios-6.0.18/","native_build":true,"dependencies":[]}],"android":[{"name":"cloud_firestore","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/cloud_firestore-4.3.1/","native_build":true,"dependencies":["firebase_core"]},{"name":"file_picker","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/file_picker-5.2.5/","native_build":true,"dependencies":["flutter_plugin_android_lifecycle"]},{"name":"firebase_auth","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_auth-4.2.5/","native_build":true,"dependencies":["firebase_core"]},{"name":"firebase_core","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_core-2.4.1/","native_build":true,"dependencies":[]},{"name":"firebase_messaging","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_messaging-14.2.1/","native_build":true,"dependencies":["firebase_core"]},{"name":"firebase_storage","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_storage-11.0.10/","native_build":true,"dependencies":["firebase_core"]},{"name":"flutter_local_notifications","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/flutter_local_notifications-13.0.0/","native_build":true,"dependencies":[]},{"name":"flutter_plugin_android_lifecycle","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/flutter_plugin_android_lifecycle-2.0.7/","native_build":true,"dependencies":[]},{"name":"fluttertoast","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/fluttertoast-8.1.2/","native_build":true,"dependencies":[]},{"name":"image_picker_android","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/image_picker_android-0.8.5+5/","native_build":true,"dependencies":["flutter_plugin_android_lifecycle"]},{"name":"printing","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/printing-5.9.3/","native_build":true,"dependencies":[]},{"name":"url_launcher_android","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/url_launcher_android-6.0.23/","native_build":true,"dependencies":[]}],"macos":[{"name":"cloud_firestore","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/cloud_firestore-4.3.1/","native_build":true,"dependencies":["firebase_core"]},{"name":"firebase_auth","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_auth-4.2.5/","native_build":true,"dependencies":["firebase_core"]},{"name":"firebase_core","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_core-2.4.1/","native_build":true,"dependencies":[]},{"name":"firebase_messaging","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_messaging-14.2.1/","native_build":true,"dependencies":["firebase_core"]},{"name":"firebase_storage","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_storage-11.0.10/","native_build":true,"dependencies":["firebase_core"]},{"name":"flutter_local_notifications","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/flutter_local_notifications-13.0.0/","native_build":true,"dependencies":[]},{"name":"printing","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/printing-5.9.3/","native_build":true,"dependencies":[]},{"name":"url_launcher_macos","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/url_launcher_macos-3.0.2/","native_build":true,"dependencies":[]}],"linux":[{"name":"printing","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/printing-5.9.3/","native_build":true,"dependencies":[]},{"name":"url_launcher_linux","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/url_launcher_linux-3.0.2/","native_build":true,"dependencies":[]}],"windows":[{"name":"printing","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/printing-5.9.3/","native_build":true,"dependencies":[]},{"name":"url_launcher_windows","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/url_launcher_windows-3.0.2/","native_build":true,"dependencies":[]}],"web":[{"name":"cloud_firestore_web","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/cloud_firestore_web-3.2.1/","dependencies":["firebase_core_web"]},{"name":"file_picker","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/file_picker-5.2.5/","dependencies":[]},{"name":"firebase_auth_web","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_auth_web-5.2.4/","dependencies":["firebase_core_web"]},{"name":"firebase_core_web","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_core_web-2.1.0/","dependencies":[]},{"name":"firebase_messaging_web","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_messaging_web-3.2.11/","dependencies":["firebase_core_web"]},{"name":"firebase_storage_web","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_storage_web-3.3.19/","dependencies":["firebase_core_web"]},{"name":"fluttertoast","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/fluttertoast-8.1.2/","dependencies":[]},{"name":"image_picker_for_web","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/image_picker_for_web-2.1.10/","dependencies":[]},{"name":"printing","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/printing-5.9.3/","dependencies":[]},{"name":"url_launcher_web","path":"/home/falconcodes/.pub-cache/hosted/pub.dev/url_launcher_web-2.0.14/","dependencies":[]}]},"dependencyGraph":[{"name":"cloud_firestore","dependencies":["cloud_firestore_web","firebase_core"]},{"name":"cloud_firestore_web","dependencies":["firebase_core","firebase_core_web"]},{"name":"file_picker","dependencies":["flutter_plugin_android_lifecycle"]},{"name":"firebase_auth","dependencies":["firebase_auth_web","firebase_core"]},{"name":"firebase_auth_web","dependencies":["firebase_core","firebase_core_web"]},{"name":"firebase_core","dependencies":["firebase_core_web"]},{"name":"firebase_core_web","dependencies":[]},{"name":"firebase_messaging","dependencies":["firebase_core","firebase_messaging_web"]},{"name":"firebase_messaging_web","dependencies":["firebase_core","firebase_core_web"]},{"name":"firebase_storage","dependencies":["firebase_core","firebase_storage_web"]},{"name":"firebase_storage_web","dependencies":["firebase_core","firebase_core_web"]},{"name":"flutter_local_notifications","dependencies":[]},{"name":"flutter_plugin_android_lifecycle","dependencies":[]},{"name":"fluttertoast","dependencies":[]},{"name":"image_picker","dependencies":["image_picker_android","image_picker_for_web","image_picker_ios"]},{"name":"image_picker_android","dependencies":["flutter_plugin_android_lifecycle"]},{"name":"image_picker_for_web","dependencies":[]},{"name":"image_picker_ios","dependencies":[]},{"name":"printing","dependencies":[]},{"name":"url_launcher","dependencies":["url_launcher_android","url_launcher_ios","url_launcher_linux","url_launcher_macos","url_launcher_web","url_launcher_windows"]},{"name":"url_launcher_android","dependencies":[]},{"name":"url_launcher_ios","dependencies":[]},{"name":"url_launcher_linux","dependencies":[]},{"name":"url_launcher_macos","dependencies":[]},{"name":"url_launcher_web","dependencies":[]},{"name":"url_launcher_windows","dependencies":[]}],"date_created":"2023-01-24 06:10:47.882479","version":"3.6.0-1.0.pre.48"}
\ No newline at end of file
+{"info":"This is a generated file; do not edit or check into version control.","plugins":{"ios":[{"name":"cloud_firestore","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/cloud_firestore-4.3.1/","native_build":true,"dependencies":["firebase_core"]},{"name":"file_picker","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/file_picker-5.2.5/","native_build":true,"dependencies":[]},{"name":"firebase_auth","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/firebase_auth-4.2.5/","native_build":true,"dependencies":["firebase_core"]},{"name":"firebase_core","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/firebase_core-2.4.1/","native_build":true,"dependencies":[]},{"name":"firebase_messaging","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/firebase_messaging-14.2.1/","native_build":true,"dependencies":["firebase_core"]},{"name":"firebase_storage","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/firebase_storage-11.0.10/","native_build":true,"dependencies":["firebase_core"]},{"name":"flutter_local_notifications","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_local_notifications-13.0.0/","native_build":true,"dependencies":[]},{"name":"fluttertoast","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/fluttertoast-8.1.2/","native_build":true,"dependencies":[]},{"name":"image_picker_ios","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/image_picker_ios-0.8.6+5/","native_build":true,"dependencies":[]},{"name":"printing","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/printing-5.9.3/","native_build":true,"dependencies":[]},{"name":"url_launcher_ios","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/url_launcher_ios-6.0.17/","native_build":true,"dependencies":[]}],"android":[{"name":"cloud_firestore","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/cloud_firestore-4.3.1/","native_build":true,"dependencies":["firebase_core"]},{"name":"file_picker","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/file_picker-5.2.5/","native_build":true,"dependencies":["flutter_plugin_android_lifecycle"]},{"name":"firebase_auth","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/firebase_auth-4.2.5/","native_build":true,"dependencies":["firebase_core"]},{"name":"firebase_core","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/firebase_core-2.4.1/","native_build":true,"dependencies":[]},{"name":"firebase_messaging","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/firebase_messaging-14.2.1/","native_build":true,"dependencies":["firebase_core"]},{"name":"firebase_storage","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/firebase_storage-11.0.10/","native_build":true,"dependencies":["firebase_core"]},{"name":"flutter_local_notifications","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_local_notifications-13.0.0/","native_build":true,"dependencies":[]},{"name":"flutter_plugin_android_lifecycle","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_plugin_android_lifecycle-2.0.7/","native_build":true,"dependencies":[]},{"name":"fluttertoast","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/fluttertoast-8.1.2/","native_build":true,"dependencies":[]},{"name":"image_picker_android","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/image_picker_android-0.8.5+4/","native_build":true,"dependencies":["flutter_plugin_android_lifecycle"]},{"name":"printing","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/printing-5.9.3/","native_build":true,"dependencies":[]},{"name":"url_launcher_android","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/url_launcher_android-6.0.22/","native_build":true,"dependencies":[]}],"macos":[{"name":"cloud_firestore","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/cloud_firestore-4.3.1/","native_build":true,"dependencies":["firebase_core"]},{"name":"firebase_auth","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/firebase_auth-4.2.5/","native_build":true,"dependencies":["firebase_core"]},{"name":"firebase_core","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/firebase_core-2.4.1/","native_build":true,"dependencies":[]},{"name":"firebase_messaging","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/firebase_messaging-14.2.1/","native_build":true,"dependencies":["firebase_core"]},{"name":"firebase_storage","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/firebase_storage-11.0.10/","native_build":true,"dependencies":["firebase_core"]},{"name":"flutter_local_notifications","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_local_notifications-13.0.0/","native_build":true,"dependencies":[]},{"name":"printing","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/printing-5.9.3/","native_build":true,"dependencies":[]},{"name":"url_launcher_macos","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/url_launcher_macos-3.0.1/","native_build":true,"dependencies":[]}],"linux":[{"name":"printing","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/printing-5.9.3/","native_build":true,"dependencies":[]},{"name":"url_launcher_linux","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/url_launcher_linux-3.0.1/","native_build":true,"dependencies":[]}],"windows":[{"name":"printing","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/printing-5.9.3/","native_build":true,"dependencies":[]},{"name":"url_launcher_windows","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/url_launcher_windows-3.0.1/","native_build":true,"dependencies":[]}],"web":[{"name":"cloud_firestore_web","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/cloud_firestore_web-3.2.1/","dependencies":["firebase_core_web"]},{"name":"file_picker","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/file_picker-5.2.5/","dependencies":[]},{"name":"firebase_auth_web","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/firebase_auth_web-5.2.4/","dependencies":["firebase_core_web"]},{"name":"firebase_core_web","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/firebase_core_web-2.1.0/","dependencies":[]},{"name":"firebase_messaging_web","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/firebase_messaging_web-3.2.11/","dependencies":["firebase_core_web"]},{"name":"firebase_storage_web","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/firebase_storage_web-3.3.19/","dependencies":["firebase_core_web"]},{"name":"fluttertoast","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/fluttertoast-8.1.2/","dependencies":[]},{"name":"image_picker_for_web","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/image_picker_for_web-2.1.10/","dependencies":[]},{"name":"printing","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/printing-5.9.3/","dependencies":[]},{"name":"url_launcher_web","path":"/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/url_launcher_web-2.0.13/","dependencies":[]}]},"dependencyGraph":[{"name":"cloud_firestore","dependencies":["cloud_firestore_web","firebase_core"]},{"name":"cloud_firestore_web","dependencies":["firebase_core","firebase_core_web"]},{"name":"file_picker","dependencies":["flutter_plugin_android_lifecycle"]},{"name":"firebase_auth","dependencies":["firebase_auth_web","firebase_core"]},{"name":"firebase_auth_web","dependencies":["firebase_core","firebase_core_web"]},{"name":"firebase_core","dependencies":["firebase_core_web"]},{"name":"firebase_core_web","dependencies":[]},{"name":"firebase_messaging","dependencies":["firebase_core","firebase_messaging_web"]},{"name":"firebase_messaging_web","dependencies":["firebase_core","firebase_core_web"]},{"name":"firebase_storage","dependencies":["firebase_core","firebase_storage_web"]},{"name":"firebase_storage_web","dependencies":["firebase_core","firebase_core_web"]},{"name":"flutter_local_notifications","dependencies":[]},{"name":"flutter_plugin_android_lifecycle","dependencies":[]},{"name":"fluttertoast","dependencies":[]},{"name":"image_picker","dependencies":["image_picker_android","image_picker_for_web","image_picker_ios"]},{"name":"image_picker_android","dependencies":["flutter_plugin_android_lifecycle"]},{"name":"image_picker_for_web","dependencies":[]},{"name":"image_picker_ios","dependencies":[]},{"name":"printing","dependencies":[]},{"name":"url_launcher","dependencies":["url_launcher_android","url_launcher_ios","url_launcher_linux","url_launcher_macos","url_launcher_web","url_launcher_windows"]},{"name":"url_launcher_android","dependencies":[]},{"name":"url_launcher_ios","dependencies":[]},{"name":"url_launcher_linux","dependencies":[]},{"name":"url_launcher_macos","dependencies":[]},{"name":"url_launcher_web","dependencies":[]},{"name":"url_launcher_windows","dependencies":[]}],"date_created":"2023-01-25 00:17:11.569090","version":"3.3.10"}
\ No newline at end of file
Index: lib/screens/home_page/main_tabs/notifications_page/notifications_tab_bar.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:cloud_firestore/cloud_firestore.dart';\nimport 'package:flutter/material.dart';\nimport '../../../../classes/notifications_data.dart';\nimport '../../../../services/Firebase/firestore/firestore.dart';\nimport 'notifications_page_utils/notifications_tab.dart';\nimport 'notifications_page_utils/notifications_tab_view.dart';\n\nclass Notifications extends StatefulWidget {\n  const Notifications({Key? key}) : super(key: key);\n\n  @override\n  NotificationsState createState() => NotificationsState();\n}\n\nclass NotificationsState extends State<Notifications>\n    with SingleTickerProviderStateMixin {\n  late TabController _tabController;\n  final TextEditingController searchQueryController = TextEditingController();\n  int index = 0;\n  static List<NotificationsData> ontracklist = [];\n  static List<NotificationsData> delayedlist = [];\n  static late List<NotificationsData> allData;\n\n  @override\n  void initState() {\n    _tabController = TabController(length: 2, vsync: this);\n    _tabController.addListener(() {\n      setState(() {\n        index = _tabController.index;\n      });\n    });\n    super.initState();\n  }\n\n  @override\n  void dispose() {\n    super.dispose();\n    _tabController.dispose();\n    searchQueryController.dispose();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    double screenHeight = MediaQuery.of(context).size.height;\n    double screenWidth = MediaQuery.of(context).size.width;\n    return SafeArea(\n      child: Scaffold(\n        appBar: appbar(_tabController, index, context),\n        body: Padding(\n          padding: EdgeInsets.all(screenWidth / 30),\n          child: Column(\n            children: [\n              Padding(\n                padding: EdgeInsets.all(screenWidth / 50),\n                child: searchBox(screenHeight, screenWidth),\n              ),\n              FutureBuilder(\n                  future: DataBaseService().getNotifications(),\n                  builder: (context, snapshot) {\n                    if (snapshot.hasData) {\n                      // allData = snapshot.data as List<NotificationsData>;\n\n                      // sort(allData);\n                      ontracklist = snapshot.data as List<NotificationsData>;\n                      delayedlist = snapshot.data as List<NotificationsData>;\n                      ontracklist = _runFilter(\n                          searchQueryController.text.toString().trim());\n                      delayedlist = _runFilter2(\n                          searchQueryController.text.toString().trim());\n                      ontracklist.sort(((a, b) => b.on.compareTo(a.on)));\n                      delayedlist.sort(((a, b) => b.on.compareTo(a.on)));\n                      return Expanded(\n                          child: tabview(_tabController, screenHeight,\n                              screenWidth, context));\n                    } else if (snapshot.hasError) {\n                      return Center(child: PaTaTa(snapshot.error.toString()));\n                    } else {\n                      return const Center(\n                        child: CircularProgressIndicator(),\n                      );\n                    }\n                  }),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n\n  Widget searchBox(double height, double width) {\n    return TextField(\n      controller: searchQueryController,\n      onChanged: (value) {\n        setState(() {\n          ontracklist = _runFilter(value);\n          delayedlist = _runFilter2(value);\n        });\n      },\n      decoration: InputDecoration(\n        contentPadding:\n            EdgeInsets.symmetric(vertical: height / 70, horizontal: width / 20),\n        hintText: \"Search\",\n        suffixIcon: const Icon(Icons.search),\n        // prefix: Icon(Icons.search),\n        border: OutlineInputBorder(\n          borderRadius: BorderRadius.circular(20.0),\n          borderSide: const BorderSide(),\n        ),\n      ),\n    );\n  }\n\n  List<NotificationsData> _runFilter(String value) {\n    final search1 = ontracklist.where((element) {\n      final name = element.title.toString().toLowerCase();\n      final desc = element.body.toString().toLowerCase();\n      final q = value.toLowerCase();\n      if (name.contains(q)) {\n        return name.contains(q);\n      } else {\n        return desc.contains(q);\n      }\n    }).toList();\n    // print(search1);\n    return ontracklist = search1;\n  }\n\n  List<NotificationsData> _runFilter2(String value) {\n    final search1 = delayedlist.where((element) {\n      final name = element.title.toString().toLowerCase();\n      final desc = element.body.toString().toLowerCase();\n      final q = value.toLowerCase();\n      if (name.contains(q)) {\n        return name.contains(q);\n      } else {\n        return desc.contains(q);\n      }\n    }).toList();\n    // print(search1);\n    return delayedlist = search1;\n  }\n\n  // void sort(List<NotificationsData> allData) async {\n  //   DateTime dueDate = DateTime.now();\n  //   for (NotificationsData data in allData) {\n  //     var query = await FirebaseFirestore.instance\n  //         .collection('mou')\n  //         .where('doc-name', isEqualTo: data.docName)\n  //         .get();\n  //     final dat = query.docs.map((doc) {\n  //       dueDate = doc['due-date'].toDate();\n  //       return doc.data();\n  //     });\n\n  //     if ((dueDate).difference(DateTime.now()).isNegative) {\n  //       print(\" !due: $dueDate\");\n  //       delayedlist.add(data);\n  //     } else {\n  //       print(\" on: $dueDate\");\n  //       ontracklist.add(data);\n  //     }\n  //   }\n  // }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/screens/home_page/main_tabs/notifications_page/notifications_tab_bar.dart b/lib/screens/home_page/main_tabs/notifications_page/notifications_tab_bar.dart
--- a/lib/screens/home_page/main_tabs/notifications_page/notifications_tab_bar.dart	(revision 042afc9c5a7076f10bed7195b658a9587363f4cb)
+++ b/lib/screens/home_page/main_tabs/notifications_page/notifications_tab_bar.dart	(date 1674572596980)
@@ -1,5 +1,6 @@
 import 'package:cloud_firestore/cloud_firestore.dart';
 import 'package:flutter/material.dart';
+import 'package:string_validator/string_validator.dart';
 import '../../../../classes/notifications_data.dart';
 import '../../../../services/Firebase/firestore/firestore.dart';
 import 'notifications_page_utils/notifications_tab.dart';
@@ -58,9 +59,6 @@
                   future: DataBaseService().getNotifications(),
                   builder: (context, snapshot) {
                     if (snapshot.hasData) {
-                      // allData = snapshot.data as List<NotificationsData>;
-
-                      // sort(allData);
                       ontracklist = snapshot.data as List<NotificationsData>;
                       delayedlist = snapshot.data as List<NotificationsData>;
                       ontracklist = _runFilter(
@@ -140,26 +138,23 @@
     return delayedlist = search1;
   }
 
-  // void sort(List<NotificationsData> allData) async {
-  //   DateTime dueDate = DateTime.now();
-  //   for (NotificationsData data in allData) {
-  //     var query = await FirebaseFirestore.instance
-  //         .collection('mou')
-  //         .where('doc-name', isEqualTo: data.docName)
-  //         .get();
-  //     final dat = query.docs.map((doc) {
-  //       dueDate = doc['due-date'].toDate();
-  //       return doc.data();
-  //     });
-
-  //     if ((dueDate).difference(DateTime.now()).isNegative) {
-  //       print(" !due: $dueDate");
-  //       delayedlist.add(data);
-  //     } else {
-  //       print(" on: $dueDate");
-  //       ontracklist.add(data);
-  //     }
-  //   }
-  // }
-
+  void sort(List<NotificationsData> data) async {
+    for (NotificationsData data in data) {
+      var query = await FirebaseFirestore.instance
+          .collection('mou')
+          .where('doc-name', isEqualTo: data.docName)
+          .get();
+      final dueDate = query.docs.map((doc) {
+        return doc['due-date'].toDate();
+      }).toList();
+      print(dueDate[0]);
+      if ((dueDate[0]).difference(DateTime.now()).isNegative) {
+        print(" !due: $dueDate");
+        delayedlist.add(data);
+      } else {
+        print(" on: $dueDate");
+        ontracklist.add(data);
+      }
+    }
+  }
 }
Index: .flutter-plugins
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># This is a generated file; do not edit or check into version control.\ncloud_firestore=/home/falconcodes/.pub-cache/hosted/pub.dev/cloud_firestore-4.3.1/\ncloud_firestore_web=/home/falconcodes/.pub-cache/hosted/pub.dev/cloud_firestore_web-3.2.1/\nfile_picker=/home/falconcodes/.pub-cache/hosted/pub.dev/file_picker-5.2.5/\nfirebase_auth=/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_auth-4.2.5/\nfirebase_auth_web=/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_auth_web-5.2.4/\nfirebase_core=/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_core-2.4.1/\nfirebase_core_web=/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_core_web-2.1.0/\nfirebase_messaging=/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_messaging-14.2.1/\nfirebase_messaging_web=/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_messaging_web-3.2.11/\nfirebase_storage=/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_storage-11.0.10/\nfirebase_storage_web=/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_storage_web-3.3.19/\nflutter_local_notifications=/home/falconcodes/.pub-cache/hosted/pub.dev/flutter_local_notifications-13.0.0/\nflutter_plugin_android_lifecycle=/home/falconcodes/.pub-cache/hosted/pub.dev/flutter_plugin_android_lifecycle-2.0.7/\nfluttertoast=/home/falconcodes/.pub-cache/hosted/pub.dev/fluttertoast-8.1.2/\nimage_picker=/home/falconcodes/.pub-cache/hosted/pub.dev/image_picker-0.8.6+1/\nimage_picker_android=/home/falconcodes/.pub-cache/hosted/pub.dev/image_picker_android-0.8.5+5/\nimage_picker_for_web=/home/falconcodes/.pub-cache/hosted/pub.dev/image_picker_for_web-2.1.10/\nimage_picker_ios=/home/falconcodes/.pub-cache/hosted/pub.dev/image_picker_ios-0.8.6+6/\nprinting=/home/falconcodes/.pub-cache/hosted/pub.dev/printing-5.9.3/\nurl_launcher=/home/falconcodes/.pub-cache/hosted/pub.dev/url_launcher-6.1.8/\nurl_launcher_android=/home/falconcodes/.pub-cache/hosted/pub.dev/url_launcher_android-6.0.23/\nurl_launcher_ios=/home/falconcodes/.pub-cache/hosted/pub.dev/url_launcher_ios-6.0.18/\nurl_launcher_linux=/home/falconcodes/.pub-cache/hosted/pub.dev/url_launcher_linux-3.0.2/\nurl_launcher_macos=/home/falconcodes/.pub-cache/hosted/pub.dev/url_launcher_macos-3.0.2/\nurl_launcher_web=/home/falconcodes/.pub-cache/hosted/pub.dev/url_launcher_web-2.0.14/\nurl_launcher_windows=/home/falconcodes/.pub-cache/hosted/pub.dev/url_launcher_windows-3.0.2/\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.flutter-plugins b/.flutter-plugins
--- a/.flutter-plugins	(revision 042afc9c5a7076f10bed7195b658a9587363f4cb)
+++ b/.flutter-plugins	(date 1674586031434)
@@ -1,27 +1,27 @@
 # This is a generated file; do not edit or check into version control.
-cloud_firestore=/home/falconcodes/.pub-cache/hosted/pub.dev/cloud_firestore-4.3.1/
-cloud_firestore_web=/home/falconcodes/.pub-cache/hosted/pub.dev/cloud_firestore_web-3.2.1/
-file_picker=/home/falconcodes/.pub-cache/hosted/pub.dev/file_picker-5.2.5/
-firebase_auth=/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_auth-4.2.5/
-firebase_auth_web=/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_auth_web-5.2.4/
-firebase_core=/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_core-2.4.1/
-firebase_core_web=/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_core_web-2.1.0/
-firebase_messaging=/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_messaging-14.2.1/
-firebase_messaging_web=/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_messaging_web-3.2.11/
-firebase_storage=/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_storage-11.0.10/
-firebase_storage_web=/home/falconcodes/.pub-cache/hosted/pub.dev/firebase_storage_web-3.3.19/
-flutter_local_notifications=/home/falconcodes/.pub-cache/hosted/pub.dev/flutter_local_notifications-13.0.0/
-flutter_plugin_android_lifecycle=/home/falconcodes/.pub-cache/hosted/pub.dev/flutter_plugin_android_lifecycle-2.0.7/
-fluttertoast=/home/falconcodes/.pub-cache/hosted/pub.dev/fluttertoast-8.1.2/
-image_picker=/home/falconcodes/.pub-cache/hosted/pub.dev/image_picker-0.8.6+1/
-image_picker_android=/home/falconcodes/.pub-cache/hosted/pub.dev/image_picker_android-0.8.5+5/
-image_picker_for_web=/home/falconcodes/.pub-cache/hosted/pub.dev/image_picker_for_web-2.1.10/
-image_picker_ios=/home/falconcodes/.pub-cache/hosted/pub.dev/image_picker_ios-0.8.6+6/
-printing=/home/falconcodes/.pub-cache/hosted/pub.dev/printing-5.9.3/
-url_launcher=/home/falconcodes/.pub-cache/hosted/pub.dev/url_launcher-6.1.8/
-url_launcher_android=/home/falconcodes/.pub-cache/hosted/pub.dev/url_launcher_android-6.0.23/
-url_launcher_ios=/home/falconcodes/.pub-cache/hosted/pub.dev/url_launcher_ios-6.0.18/
-url_launcher_linux=/home/falconcodes/.pub-cache/hosted/pub.dev/url_launcher_linux-3.0.2/
-url_launcher_macos=/home/falconcodes/.pub-cache/hosted/pub.dev/url_launcher_macos-3.0.2/
-url_launcher_web=/home/falconcodes/.pub-cache/hosted/pub.dev/url_launcher_web-2.0.14/
-url_launcher_windows=/home/falconcodes/.pub-cache/hosted/pub.dev/url_launcher_windows-3.0.2/
+cloud_firestore=/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/cloud_firestore-4.3.1/
+cloud_firestore_web=/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/cloud_firestore_web-3.2.1/
+file_picker=/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/file_picker-5.2.5/
+firebase_auth=/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/firebase_auth-4.2.5/
+firebase_auth_web=/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/firebase_auth_web-5.2.4/
+firebase_core=/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/firebase_core-2.4.1/
+firebase_core_web=/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/firebase_core_web-2.1.0/
+firebase_messaging=/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/firebase_messaging-14.2.1/
+firebase_messaging_web=/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/firebase_messaging_web-3.2.11/
+firebase_storage=/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/firebase_storage-11.0.10/
+firebase_storage_web=/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/firebase_storage_web-3.3.19/
+flutter_local_notifications=/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_local_notifications-13.0.0/
+flutter_plugin_android_lifecycle=/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/flutter_plugin_android_lifecycle-2.0.7/
+fluttertoast=/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/fluttertoast-8.1.2/
+image_picker=/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/image_picker-0.8.6/
+image_picker_android=/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/image_picker_android-0.8.5+4/
+image_picker_for_web=/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/image_picker_for_web-2.1.10/
+image_picker_ios=/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/image_picker_ios-0.8.6+5/
+printing=/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/printing-5.9.3/
+url_launcher=/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/url_launcher-6.1.7/
+url_launcher_android=/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/url_launcher_android-6.0.22/
+url_launcher_ios=/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/url_launcher_ios-6.0.17/
+url_launcher_linux=/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/url_launcher_linux-3.0.1/
+url_launcher_macos=/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/url_launcher_macos-3.0.1/
+url_launcher_web=/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/url_launcher_web-2.0.13/
+url_launcher_windows=/home/sushant0206/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/url_launcher_windows-3.0.1/
Index: lib/services/Firebase/firestore/upload_service.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:firebase_storage/firebase_storage.dart';\nimport 'package:flutter/material.dart';\nimport '../../../screens/mou_creation/mou_creation_page.dart';\nimport 'dart:io' as io;\n\nclass FirebaseApi {\n  static var downloadUrl;\n  static Future fileUpload() async {\n    if (CreateFormState.file == null) {\n      print(\"not done\");\n      return;\n    } else {\n      String filename = (CreateFormState.file!.path).split('/').last;\n      final location = 'mou1/$filename';\n\n      CreateFormState.task =\n          FirebaseApi.uploadTask(location, CreateFormState.file!);\n      final snapshot = await CreateFormState.task!.whenComplete(() {});\n      downloadUrl = await snapshot.ref.getDownloadURL();\n      print(\"done\");\n    }\n  }\n\n  static UploadTask? uploadTask(String location, io.File file) {\n    try {\n      final refer = FirebaseStorage.instance.ref(location);\n      return refer.putFile(file);\n    } on FirebaseException catch (e) {\n      print(e);\n    }\n    return null;\n  }\n}\n\nWidget buildUploadStatus(UploadTask task) => StreamBuilder<TaskSnapshot>(\n      stream: task.snapshotEvents,\n      builder: (context, snapshot) {\n        if (snapshot.hasData) {\n          final snap = snapshot.data!;\n          final progress = snap.bytesTransferred / snap.totalBytes;\n          final percentage = (progress * 100).toStringAsFixed(2);\n\n          return PaTaTa(\n            '$percentage %',\n            style: const GoogleFonts.figtree(fontSize: 20, fontWeight: FontWeight.bold),\n          );\n        } else {\n          return const PaTaTa(\"Uploading...\");\n        }\n      },\n    );\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/services/Firebase/firestore/upload_service.dart b/lib/services/Firebase/firestore/upload_service.dart
--- a/lib/services/Firebase/firestore/upload_service.dart	(revision 042afc9c5a7076f10bed7195b658a9587363f4cb)
+++ b/lib/services/Firebase/firestore/upload_service.dart	(date 1674581379890)
@@ -1,3 +1,4 @@
+import 'package:MouTracker/classes/firebase_file.dart';
 import 'package:firebase_storage/firebase_storage.dart';
 import 'package:flutter/material.dart';
 import '../../../screens/mou_creation/mou_creation_page.dart';
@@ -5,19 +6,21 @@
 
 class FirebaseApi {
   static var downloadUrl;
-  static Future fileUpload() async {
+  static late Reference fileReference;
+  static Future fileUpload(String docName) async {
     if (CreateFormState.file == null) {
       print("not done");
       return;
     } else {
       String filename = (CreateFormState.file!.path).split('/').last;
-      final location = 'mou1/$filename';
+      final location = '$docName';
 
       CreateFormState.task =
           FirebaseApi.uploadTask(location, CreateFormState.file!);
       final snapshot = await CreateFormState.task!.whenComplete(() {});
+      fileReference = snapshot.ref;
       downloadUrl = await snapshot.ref.getDownloadURL();
-      print("done");
+      print("url $downloadUrl");
     }
   }
 
@@ -30,6 +33,32 @@
     }
     return null;
   }
+
+  static Future download(String path) async {
+    final ref = FirebaseStorage.instance.ref('test/');
+    final result = await ref.listAll();
+    final url = await result.items[0].getDownloadURL();
+    final ref2 = result.items[0];
+    final name = ref2.name;
+    final file = FirebaseFile(ref: ref2, name: name, url: url);
+
+    try {
+      final io.Directory systemTempDir = io.Directory.systemTemp;
+      final io.File tempFile =
+          io.File('/storage/emulated/0/Download/temp${ref.name}');
+      if (tempFile.existsSync()) await tempFile.delete();
+
+      await ref.writeToFile(tempFile);
+
+      print('${systemTempDir.path}/temp${ref.name}'
+          // 'Success!\n Downloaded ${ref.name} \n from bucket: ${ref.bucket}\n '
+          // 'at path: ${ref.fullPath} \n'
+          // 'Wrote "${ref.fullPath}" to tmp-${ref.name}',
+          );
+    } catch (e) {
+      print(e);
+    }
+  }
 }
 
 Widget buildUploadStatus(UploadTask task) => StreamBuilder<TaskSnapshot>(
Index: lib/screens/mou_creation/mou_creation_page.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:MouTracker/common_widgets/widgets.dart';\nimport 'package:MouTracker/screens/mou_creation/creation_page_utils/create_mou_widgets.dart';\nimport 'package:MouTracker/screens/mou_creation/creation_page_utils/fields.dart';\nimport 'package:MouTracker/services/Firebase/fcm/notification_service.dart';\nimport 'package:MouTracker/services/Firebase/firestore/firestore.dart';\nimport 'package:MouTracker/services/Firebase/firestore/upload_service.dart';\nimport 'package:firebase_storage/firebase_storage.dart';\nimport 'package:file_picker/file_picker.dart';\nimport 'package:flutter/material.dart';\nimport 'dart:io' as io;\n\nclass CreateForm extends StatefulWidget {\n  const CreateForm({Key? key}) : super(key: key);\n\n  @override\n  State<CreateForm> createState() => CreateFormState();\n}\n\nclass CreateFormState extends State<CreateForm> {\n  int currStep = 0;\n  // for identification and validation of the form\n\n  // page 1\n  TextEditingController docNameController = TextEditingController();\n  TextEditingController authNameController = TextEditingController();\n  TextEditingController spocController = TextEditingController();\n\n  // page 2\n  TextEditingController companyNameController = TextEditingController();\n  TextEditingController companyWebController = TextEditingController();\n\n  //page 3\n  TextEditingController descController = TextEditingController();\n  TextEditingController dueDateController = TextEditingController();\n  static io.File? file;\n  static UploadTask? task;\n  final _formKey = GlobalKey<FormState>();\n  @override\n  void initState() {\n    file = null;\n    task = null;\n    super.initState();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return SafeArea(\n        child: Scaffold(\n      backgroundColor: const Color(0XFFEFF3F6),\n      appBar: appBar(\"CREATE MOU\", context),\n      body: NotificationListener<OverscrollIndicatorNotification>(\n          onNotification: (overscroll) {\n            overscroll.disallowIndicator();\n            return true;\n          },\n          child: Form(\n            key: _formKey,\n            child: Stepper(\n              type: StepperType.horizontal,\n              steps: getSteps(),\n              currentStep: currStep,\n              onStepTapped: (index) => setState(() => currStep = index),\n              onStepContinue: () => setState(() {\n                bool notLastStep = currStep != getSteps().length - 1;\n                if (notLastStep) {\n                  currStep++;\n                } else {\n                  submitMOU();\n                }\n              }),\n              onStepCancel: (() => setState(() {\n                    if (currStep != 0) {\n                      currStep--;\n                    }\n                  })),\n              controlsBuilder: ((context, details) {\n                return formButtons(details, getSteps);\n              }),\n            ),\n          )),\n    ));\n  }\n\n  List<Step> getSteps() {\n    return [\n      Step(\n        title: const PaTaTa(\"Document\"),\n        content: Padding(\n          padding: const EdgeInsets.symmetric(horizontal: 12.0),\n          child: Column(\n            mainAxisAlignment: MainAxisAlignment.start,\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              const PaTaTa(\n                \"Document name\",\n                style: GoogleFonts.figtree(fontSize: 18, fontWeight: FontWeight.bold),\n              ),\n              CreateMouField(\n                  hintText: \"Document name\",\n                  textInputType: TextInputType.text,\n                  textEditingController: docNameController),\n              const PaTaTa(\n                \"Initator name\",\n                style: GoogleFonts.figtree(fontSize: 18, fontWeight: FontWeight.bold),\n              ),\n              CreateMouField(\n                  hintText: \"Initiator name\",\n                  textInputType: TextInputType.text,\n                  textEditingController: authNameController),\n              const PaTaTa(\n                \"SPOC name\",\n                style: GoogleFonts.figtree(fontSize: 18, fontWeight: FontWeight.bold),\n              ),\n              CreateMouField(\n                  hintText: \"SPOC name\",\n                  textInputType: TextInputType.text,\n                  textEditingController: spocController),\n            ],\n          ),\n        ),\n        isActive: currStep >= 0,\n        state: currStep > 0 ? StepState.complete : StepState.indexed,\n      ),\n      Step(\n        title: const PaTaTa(\"Company\"),\n        content: Padding(\n          padding: const EdgeInsets.symmetric(horizontal: 12.0),\n          child: Column(\n            mainAxisAlignment: MainAxisAlignment.start,\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              const PaTaTa(\n                \"Company name\",\n                style: GoogleFonts.figtree(fontSize: 18, fontWeight: FontWeight.bold),\n              ),\n              CreateMouField(\n                  hintText: \"Company name\",\n                  textInputType: TextInputType.text,\n                  textEditingController: companyNameController),\n              const PaTaTa(\n                \"Company website\",\n                style: GoogleFonts.figtree(fontSize: 18, fontWeight: FontWeight.bold),\n              ),\n              CreateMouField(\n                  hintText: \"Company website\",\n                  textInputType: TextInputType.text,\n                  textEditingController: companyWebController),\n            ],\n          ),\n        ),\n        isActive: currStep >= 1,\n        state: currStep > 1 ? StepState.complete : StepState.indexed,\n      ),\n      Step(\n        title: const PaTaTa(\"Complete\"),\n        content: Padding(\n          padding: const EdgeInsets.symmetric(horizontal: 12.0),\n          child: Column(\n            mainAxisAlignment: MainAxisAlignment.start,\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              const PaTaTa(\n                \"Due date\",\n                style: GoogleFonts.figtree(fontSize: 18, fontWeight: FontWeight.bold),\n              ),\n              CreateMouField(\n                  hintText: \"Due date\",\n                  textInputType: TextInputType.datetime,\n                  textEditingController: dueDateController),\n              const PaTaTa(\n                \"MOU description\",\n                style: GoogleFonts.figtree(fontSize: 18, fontWeight: FontWeight.bold),\n              ),\n              CreateMouField(\n                  hintText: \"MOU description\",\n                  textInputType: TextInputType.text,\n                  textEditingController: descController),\n              chooseFileButton(context, pickFile),\n            ],\n          ),\n        ),\n        isActive: currStep >= 2,\n        state: currStep > 2 ? StepState.complete : StepState.indexed,\n      ),\n    ];\n  }\n\n  void submitMOU() async {\n    if (!_formKey.currentState!.validate()) {\n      return;\n    }\n    _formKey.currentState!.save();\n    try {\n      // document details\n      String docName = docNameController.text;\n      String authName = authNameController.text;\n      String spocName = spocController.text;\n\n      // company details\n      String companyName = companyNameController.text;\n      String companyWebsite = companyWebController.text;\n\n      // tracking details\n      // DateTime dueDate = dueDateController.text;\n      String desc = descController.text;\n      DateTime dueDate = DateTime(2022, 03, 02);\n      DataBaseService db = DataBaseService();\n      NotificationService ns = NotificationService();\n      late String mouId;\n      db.createMou(\n        approved: 0,\n        desc: desc,\n        authName: authName,\n        spocName: spocName,\n        docName: docName,\n        companyName: companyName,\n        companyWebsite: companyWebsite,\n        dueDate: dueDate,\n        isApproved: false,\n      );\n      // If text field uploading is successful, Move to File uploading\n      FirebaseApi.fileUpload();\n      db.addNotification(\n          body: \"$docName was created by $spocName\",\n          title: \"Mou Created!!\",\n          doc_name: docName,\n          by: spocName,\n          on: DateTime.now());\n      ns.sendPushMessage(\n          \"$docName was created by $spocName\", \"Mou Created!!\", docName);\n      showDialog(\n          barrierDismissible: false,\n          context: context,\n          builder: (BuildContext context) {\n            return dialog(context);\n          });\n    } catch (err) {\n      print(\"Error occurred - $err\");\n    }\n  }\n\n  Future pickFile() async {\n    final result = await FilePicker.platform.pickFiles(allowMultiple: false);\n    if (result == null) {\n      print(\"result null\");\n      return;\n    } else {\n      final filepath = result.files.single.path!;\n      setState(() {\n        file = io.File(filepath);\n      });\n    }\n  }\n\n  @override\n  void dispose() {\n    descController.dispose();\n    docNameController.dispose();\n    companyNameController.dispose();\n    authNameController.dispose();\n    companyWebController.dispose();\n    dueDateController.dispose();\n    super.dispose();\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/screens/mou_creation/mou_creation_page.dart b/lib/screens/mou_creation/mou_creation_page.dart
--- a/lib/screens/mou_creation/mou_creation_page.dart	(revision 042afc9c5a7076f10bed7195b658a9587363f4cb)
+++ b/lib/screens/mou_creation/mou_creation_page.dart	(date 1674578633790)
@@ -175,6 +175,7 @@
                   hintText: "MOU description",
                   textInputType: TextInputType.text,
                   textEditingController: descController),
+              fileName(),
               chooseFileButton(context, pickFile),
             ],
           ),
@@ -219,7 +220,7 @@
         isApproved: false,
       );
       // If text field uploading is successful, Move to File uploading
-      FirebaseApi.fileUpload();
+      FirebaseApi.fileUpload(docName);
       db.addNotification(
           body: "$docName was created by $spocName",
           title: "Mou Created!!",
Index: lib/screens/mou_creation/creation_page_utils/create_mou_widgets.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:MouTracker/common_utils/utils.dart';\nimport 'package:MouTracker/screens/mou_creation/mou_creation_page.dart';\nimport '/services/Firebase/firestore/upload_service.dart';\nimport 'package:flutter/material.dart';\n\nWidget fileName() {\n  return Center(\n    child: PaTaTa(CreateFormState.file == null\n        ? \"No File Selected\"\n        : CreateFormState.file!.path.split('/').last),\n  );\n}\n\nWidget formButtons(ControlsDetails details, List<Step> Function() getSteps) {\n  bool isLastStep = details.currentStep == getSteps().length - 1;\n  return Padding(\n    padding: details.currentStep == 0\n        ? const EdgeInsets.all(22.0)\n        : const EdgeInsets.all(12.0),\n    child: Row(\n      children: [\n        Expanded(\n          child: ElevatedButton(\n            onPressed: details.onStepContinue,\n            child: isLastStep ? const PaTaTa(\"Submit\") : const PaTaTa(\"Next\"),\n          ),\n        ),\n        const SizedBox(width: 12),\n        if (details.currentStep != 0)\n          Expanded(\n            child: ElevatedButton(\n              onPressed: details.onStepCancel,\n              style: ButtonStyle(\n                backgroundColor: MaterialStateProperty.all(Colors.grey[300]),\n              ),\n              child: const PaTaTa(\n                \"Back\",\n                style: GoogleFonts.figtree(color: Colors.grey),\n              ),\n            ),\n          ),\n      ],\n    ),\n  );\n}\n\nWidget chooseFileButton(BuildContext context, Future Function() pickFile) {\n  double width = MediaQuery.of(context).size.width;\n  return Padding(\n    padding: const EdgeInsets.all(8.0),\n    child: Container(\n      // height: 60,\n      // width: 300,\n      height: MediaQuery.of(context).size.height * 0.08,\n      width: width * 0.75,\n      padding: EdgeInsets.fromLTRB(width / 40, width / 40, 0, 0),\n      child: ElevatedButton(\n        onPressed: () {\n          pickFile();\n        },\n        style: ButtonStyle(\n          backgroundColor: MaterialStateProperty.all(const Color(0xff64C636)),\n          elevation: MaterialStateProperty.all(5),\n        ),\n        child: const PaTaTa(\n          'Choose File',\n          style: GoogleFonts.figtree(fontSize: 20),\n        ),\n      ),\n    ),\n  );\n}\n\nWidget dialog(BuildContext cnt) {\n  return SimpleDialog(\n    backgroundColor: const Color(0xFF2D376E),\n    title: Row(\n      children: const <Widget>[\n        Padding(\n          padding: EdgeInsets.only(right: 8.0),\n          child: Icon(\n            Icons.error,\n            // color: Color(0xFFF2C32C),\n            color: kCardRed,\n          ),\n        ),\n        Flexible(\n          child: PaTaTa(\n            \"Please Wait\",\n            style: GoogleFonts.figtree(fontWeight: FontWeight.w600, color: Colors.white),\n          ),\n        )\n      ],\n    ),\n    contentPadding: const EdgeInsets.fromLTRB(24, 12, 24, 12),\n    children: <Widget>[\n      CreateFormState.task != null\n          ? buildUploadStatus(CreateFormState.task!)\n          : const PaTaTa(\n              \"You haven't selected any file\",\n              style: GoogleFonts.figtree(color: Colors.white),\n            ),\n      Row(\n        mainAxisAlignment: MainAxisAlignment.end,\n        children: <Widget>[\n          TextButton(\n            style: ButtonStyle(\n                backgroundColor:\n                    MaterialStateProperty.all(const Color(0xFFF2C32C))),\n            onPressed: () {\n              // CreationDetails.mapping(FirebaseApi.downloadUrl, \"downloadLink\");\n              // CreationDetails.addData();\n\n              Navigator.pop(cnt);\n              Navigator.of(cnt).pushReplacementNamed('/submitted');\n            },\n            child: const PaTaTa(\n              \"Next\",\n              style: GoogleFonts.figtree(color: Colors.white),\n            ),\n          )\n        ],\n      )\n    ],\n  );\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/screens/mou_creation/creation_page_utils/create_mou_widgets.dart b/lib/screens/mou_creation/creation_page_utils/create_mou_widgets.dart
--- a/lib/screens/mou_creation/creation_page_utils/create_mou_widgets.dart	(revision 042afc9c5a7076f10bed7195b658a9587363f4cb)
+++ b/lib/screens/mou_creation/creation_page_utils/create_mou_widgets.dart	(date 1674576147315)
@@ -5,9 +5,12 @@
 
 Widget fileName() {
   return Center(
-    child: PaTaTa(CreateFormState.file == null
-        ? "No File Selected"
-        : CreateFormState.file!.path.split('/').last),
+    child: PaTaTa(
+      CreateFormState.file == null
+          ? "No File Selected"
+          : CreateFormState.file!.path.split('/').last,
+      style: GoogleFonts.figtree(color: kBgClr2),
+    ),
   );
 }
 
Index: lib/screens/mou_details/Tabs/info.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import '/classes/mou.dart';\nimport '/common_utils/utils.dart';\nimport 'package:flutter/material.dart';\nimport 'package:url_launcher/url_launcher.dart';\nimport 'package:MouTracker/services/Firebase/firestore/firestore.dart';\n\nclass InfoTab extends StatefulWidget {\n  final MOU mou;\n  const InfoTab({Key? key, required this.mou}) : super(key: key);\n\n  @override\n  _InfoTabState createState() => _InfoTabState();\n}\n\nclass _InfoTabState extends State<InfoTab> {\n  int k = 0;\n  DataBaseService db = DataBaseService();\n  // Setup a Provider stream here to get MOU data from firestore\n  @override\n  void initState() {\n    super.initState();\n  }\n\n  final Uri _url = Uri.parse('https://flutter.dev');\n  @override\n  Widget build(BuildContext context) {\n    double screenHeight = MediaQuery.of(context).size.height;\n    double screenWidth = MediaQuery.of(context).size.width;\n    String date = widget.mou.dueDate;\n    return Padding(\n      padding: EdgeInsets.only(\n          top: screenHeight * 0.06,\n          left: screenWidth * 0.02,\n          right: screenWidth * 0.02),\n      child: Column(\n        crossAxisAlignment: CrossAxisAlignment.center,\n        children: [\n          PaTaTa(\"Information\", style: titleStyle()),\n          _buildDivider(screenWidth, screenHeight),\n          PaTaTa(\"Title\", style: subtitleStyle()),\n          _displayText(widget.mou.docName, screenHeight, titleStyle()),\n          PaTaTa(\"Description\", style: subtitleStyle()),\n          _writeDesc(screenWidth, screenHeight),\n          PaTaTa(\"Date\", style: subtitleStyle()),\n          _displayText(date, screenHeight, normalStyle()),\n          ElevatedButton(\n            onPressed: () async {\n              final Uri url = Uri.parse('https://flutter.dev');\n              if (await canLaunchUrl(url)) {\n                await launchUrl(url);\n              }\n            },\n            style: ButtonStyle(\n              backgroundColor: MaterialStateProperty.all(Colors.green),\n            ),\n            child: const PaTaTa(\"Company Website\",\n                style: GoogleFonts.figtree(color: Colors.white, fontSize: 17)),\n          ),\n          _buildDivider(screenWidth, screenHeight),\n          Padding(\n            padding: EdgeInsets.symmetric(\n                horizontal: screenWidth * 0.05, vertical: screenHeight * 0.02),\n            child: _fileDownload(),\n          ),\n        ],\n      ),\n    );\n  }\n\n  Future<void> _launchUrl() async {\n    if (!await launchUrl(_url)) {\n      throw 'Could not launch $_url';\n    }\n  }\n\n  Padding _writeDesc(double screenWidth, double screenHeight) {\n    return Padding(\n      padding: EdgeInsets.only(\n          left: screenWidth * 0.09,\n          right: screenWidth * 0.09,\n          bottom: screenHeight * 0.02),\n      child: PaTaTa(widget.mou.description,\n          softWrap: true, textAlign: TextAlign.center, style: normalStyle()),\n    );\n  }\n\n  Padding _displayText(String text, double screenHeight, GoogleFonts.figtree style) {\n    return Padding(\n      padding: EdgeInsets.only(\n          top: screenHeight * 0.002, bottom: screenHeight * 0.02),\n      child: PaTaTa(\n        text,\n        style: style,\n      ),\n    );\n  }\n\n  Padding _buildDivider(double screenWidth, double screenHeight) {\n    return Padding(\n      padding: EdgeInsets.symmetric(\n          horizontal: screenWidth * 0.05, vertical: screenHeight * 0.01),\n      child: Divider(thickness: screenHeight * 0.003),\n    );\n  }\n\n// Card to download MOU's PDF file\n  ListTile _fileDownload() {\n    return ListTile(\n      title: const PaTaTa(\"file_name.pdf\",\n          style: GoogleFonts.figtree(fontSize: 16, color: Colors.black)),\n      subtitle: const PaTaTa(\"10.0 MB\", style: GoogleFonts.figtree(fontSize: 12)),\n      tileColor: kTileClr,\n      leading: const Icon(Icons.file_present, size: 25),\n      trailing: IconButton(\n          onPressed: () {\n            // Download MOU's PDF for firebase storage.\n          },\n          icon: const Icon(Icons.file_download_outlined, size: 25)),\n    );\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/screens/mou_details/Tabs/info.dart b/lib/screens/mou_details/Tabs/info.dart
--- a/lib/screens/mou_details/Tabs/info.dart	(revision 042afc9c5a7076f10bed7195b658a9587363f4cb)
+++ b/lib/screens/mou_details/Tabs/info.dart	(date 1674586055991)
@@ -112,7 +112,7 @@
       tileColor: kTileClr,
       leading: const Icon(Icons.file_present, size: 25),
       trailing: IconButton(
-          onPressed: () {
+          onPressed: () async {
             // Download MOU's PDF for firebase storage.
           },
           icon: const Icon(Icons.file_download_outlined, size: 25)),
